<?php
//
// File generated by ... on the 2016-01-19T12:23:21+0100
// Please do not edit manually
//

/**
 * Classes and menus for esguardian-security-mgmt (version 1.2.0)
 *
 * @author      iTop compiler
 * @license     http://opensource.org/licenses/AGPL-3.0
 */



abstract class SecurityCI extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array
		(
			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => 'name',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'finalclass'),
			'db_table' => 'securityci',
			'db_key_field' => 'id',
			'db_finalclass_field' => 'finalclass',
		);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeString("name", array("allowed_values"=>null, "sql"=>'name', "default_value"=>'', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("description", array("allowed_values"=>null, "sql"=>'description', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("org_id", array("targetclass"=>'Organization', "allowed_values"=>null, "sql"=>'org_id', "is_null_allowed"=>true, "on_target_delete"=>DEL_MANUAL, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("org_name", array("allowed_values"=>null, "extkey_attcode"=>'org_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("managers_list", array("linked_class"=>'lnkPersonAsManagerOfSecurityCI', "ext_key_to_me"=>'securityci_id', "ext_key_to_remote"=>'person_id', "allowed_values"=>null, "count_min"=>0, "count_max"=>0, "duplicates"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("documents_list", array("linked_class"=>'lnkDocumentToSecurityCI', "ext_key_to_me"=>'securityci_id', "ext_key_to_remote"=>'document_id', "allowed_values"=>null, "count_min"=>0, "count_max"=>0, "duplicates"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("tickets_list", array("linked_class"=>'lnkSecurityCIToTicket', "ext_key_to_me"=>'securityci_id', "ext_key_to_remote"=>'ticket_id', "allowed_values"=>null, "count_min"=>0, "count_max"=>0, "duplicates"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'managers_list',
  3 => 'documents_list',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'finalclass',
  1 => 'org_id',
  2 => 'name',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'finalclass',
  1 => 'org_id',
  2 => 'name',
));

	}


	/**
                    * Placeholder for backward compatibility (iTop <= 2.1.0)
                    * in case an extension attempts to redefine this function...     
                    */
 
                        public static function GetRelationQueries($sRelCode)
                        {return parent::GetRelationQueries($sRelCode);} 
                        


 
                        function DisplayBareRelations(WebPage $oPage, $bEditMode = false)
                        {
                            parent::DisplayBareRelations($oPage, $bEditMode);

                            $sTicketListAttCode = 'tickets_list';

                            if (MetaModel::IsValidAttCode(get_class($this), $sTicketListAttCode))
                            {
                                // Display one list per leaf class (the only way to display the status as of now)

                                $oAttDef = MetaModel::GetAttributeDef(get_class($this), $sTicketListAttCode);
                                $sLnkClass = $oAttDef->GetLinkedClass();
                                $sExtKeyToMe = $oAttDef->GetExtKeyToMe();
                                $sExtKeyToRemote = $oAttDef->GetExtKeyToRemote();

                                $iTotal = 0;
                                $aSearches = array();

                                foreach (MetaModel::EnumChildClasses('Ticket') as $sSubClass)
                                {
                                    if (!MetaModel::HasChildrenClasses($sSubClass))
                                    {
                                        $sStateAttCode = MetaModel::GetStateAttributeCode($sSubClass);
                                        if ($sStateAttCode != '')
                                        {
                                            $oSearch = DBSearch::FromOQL("SELECT $sSubClass AS t JOIN $sLnkClass AS lnk ON lnk.$sExtKeyToRemote = t.id WHERE $sExtKeyToMe = :myself AND $sStateAttCode NOT IN ('rejected', 'resolved', 'closed')", array('myself' => $this->GetKey()));
                                            $aSearches[$sSubClass] = $oSearch;

                                            $oSet = new DBObjectSet($oSearch);
                                            $iTotal += $oSet->Count();
                                        }
                                    }
                                }

                                $sCount = ($iTotal > 0) ? ' ('.$iTotal.')' : '';
                                $oPage->SetCurrentTab(Dict::S('Class:SecurityCI/Tab:OpenedTickets').$sCount);

                                foreach ($aSearches as $sSubClass => $oSearch)
                                {
                                    $sBlockId = __class__.'_opened_'.$sSubClass;
        
                                    $oPage->add('<fieldset>');
                                    $oPage->add('<legend>'.MetaModel::GetName($sSubClass).'</legend>');
                                    $oBlock = new DisplayBlock($oSearch, 'list', false);
                                    $oBlock->Display($oPage, $sBlockId, array('menu' => false));
                                    $oPage->add('</fieldset>');
                                }
                            }
                        }
                        

}


class lnkPersonAsManagerOfSecurityCI extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array
		(
			'category' => 'bizmodel',
			'key_type' => 'autoincrement',
			'is_link' => true,
			'name_attcode' => array('securityci_id', 'person_id'),
			'state_attcode' => '',
			'reconc_keys' => array('securityci_id', 'person_id'),
			'db_table' => 'lnkpersonasmanagerofsecurityci',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
		);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeExternalKey("securityci_id", array("targetclass"=>'SecurityCI', "allowed_values"=>null, "sql"=>'securityci_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("securityci_name", array("allowed_values"=>null, "extkey_attcode"=>'securityci_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("person_id", array("targetclass"=>'Person', "allowed_values"=>null, "sql"=>'person_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("person_name", array("allowed_values"=>null, "extkey_attcode"=>'person_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'securityci_id',
  1 => 'person_id',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'securityci_id',
  1 => 'person_id',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'securityci_id',
  1 => 'person_id',
));

	}


}


class lnkDocumentToSecurityCI extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array
		(
			'category' => 'bizmodel',
			'key_type' => 'autoincrement',
			'is_link' => true,
			'name_attcode' => array('securityci_id', 'document_id'),
			'state_attcode' => '',
			'reconc_keys' => array('securityci_id', 'document_id'),
			'db_table' => 'lnkdocumenttosecurityci',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
		);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeExternalKey("securityci_id", array("targetclass"=>'SecurityCI', "allowed_values"=>null, "sql"=>'securityci_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("securityci_name", array("allowed_values"=>null, "extkey_attcode"=>'securityci_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("document_id", array("targetclass"=>'Document', "allowed_values"=>null, "sql"=>'document_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("document_name", array("allowed_values"=>null, "extkey_attcode"=>'document_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'securityci_id',
  1 => 'document_id',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'securityci_id',
  1 => 'document_id',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'securityci_id',
  1 => 'document_id',
));

	}


}


class lnkSecurityCIToTicket extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array
		(
			'category' => 'bizmodel',
			'key_type' => 'autoincrement',
			'is_link' => true,
			'name_attcode' => array('ticket_id', 'securityci_id'),
			'state_attcode' => '',
			'reconc_keys' => array('ticket_id', 'securityci_id'),
			'db_table' => 'lnksecuritycitoticket',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
		);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeExternalKey("ticket_id", array("targetclass"=>'Ticket', "allowed_values"=>null, "sql"=>'ticket_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("ticket_ref", array("allowed_values"=>null, "extkey_attcode"=>'ticket_id', "target_attcode"=>'ref', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("ticket_title", array("allowed_values"=>null, "extkey_attcode"=>'ticket_id', "target_attcode"=>'title', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("securityci_id", array("targetclass"=>'SecurityCI', "allowed_values"=>null, "sql"=>'securityci_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("securityci_name", array("allowed_values"=>null, "extkey_attcode"=>'securityci_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("impact", array("allowed_values"=>null, "sql"=>'impact', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("impact_code", array("allowed_values"=>new ValueSetEnum("manual,computed,not_impacted"), "display_style"=>'list', "sql"=>'impact_code', "default_value"=>'manual', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'ticket_id',
  1 => 'securityci_id',
  2 => 'impact_code',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'ticket_id',
  1 => 'securityci_id',
  2 => 'impact_code',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'ticket_id',
  1 => 'securityci_id',
  2 => 'impact_code',
));

	}


}
//
// Menus
//
class MenuCreation_esguardian_security_mgmt extends ModuleHandlerAPI
{
	public static function OnMenuCreation()
	{
		global $__comp_menus__; // ensure that the global variable is indeed global !
		$__comp_menus__['SecurityConfigManagement'] = new MenuGroup('SecurityConfigManagement', 21);
		$__comp_menus__['SearchSecurityCIs'] = new SearchMenuNode('SearchSecurityCIs', 'SecurityCI', $__comp_menus__['SecurityConfigManagement']->GetIndex(), 10);
	}
} // class MenuCreation_esguardian_security_mgmt
